//
// Generated file, do not edit! Created by nedtool 4.6 from PriorityBit.msg.
//

#ifndef _PRIORITYBIT_M_H_
#define _PRIORITYBIT_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>PriorityBit.msg:4</tt> by nedtool.
 * <pre>
 * // Message type to describe identifier field of CAN
 * //Eventually, it priortize some messages
 * message PriorityBit
 * {
 *     int bit; // Stores bit value (0 and 1 or dominant and recessive)
 *     int bitIndex; // Stores index of current identifier. Its range is 11.
 * }
 * </pre>
 */
class PriorityBit : public ::cMessage
{
  protected:
    int bit_var;
    int bitIndex_var;

  private:
    void copy(const PriorityBit& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PriorityBit&);

  public:
    PriorityBit(const char *name=NULL, int kind=0);
    PriorityBit(const PriorityBit& other);
    virtual ~PriorityBit();
    PriorityBit& operator=(const PriorityBit& other);
    virtual PriorityBit *dup() const {return new PriorityBit(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getBit() const;
    virtual void setBit(int bit);
    virtual int getBitIndex() const;
    virtual void setBitIndex(int bitIndex);
};

inline void doPacking(cCommBuffer *b, PriorityBit& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PriorityBit& obj) {obj.parsimUnpack(b);}


#endif // ifndef _PRIORITYBIT_M_H_

